version: '3.8'

services:

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    depends_on:
      - mysql

  # backend:
  #   build: 
  #     context: ./test_o_parser/
  #     dockerfile: Dockerfile
  #   container_name: backend
  #   volumes:
  #     - static_volume:/app/static/
  #   env_file:
  #     - .env
  #   ports:
  #     - 8000:8000
  #   depends_on:
  #     - mysql
  #     - redis

  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
  #     - ../docs/:/usr/share/nginx/html/api/docs/
  #     - static_volume:/app/static/
  #   depends_on:
  #     - backend

  tg_bot:
    build: 
      context: ./tg_bot/
      dockerfile: Dockerfile
    container_name: tg_bot
    env_file:
      - .env
    depends_on:
      - redis

  # celery:
  #   build:
  #     context: ./test_o_parser/
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   container_name: celery
  #   command: ["bash", "/app/celery.sh", "celery"]
  #   ports:
  #     - 5554:5554
  #   restart: on-failure

  # flower:
  #   build:
  #     context: ./test_o_parser/
  #     dockerfile: Dockerfile
  #   env_file:
  #     - .env
  #   container_name: flower
  #   command: ["bash", "/app/celery.sh", "flower"]
  #   ports:
  #     - 5555:5555
  #   restart: on-failure

volumes:
  mysql_data:
  static_volume:
